{"ast":null,"code":"var _jsxFileName = \"/Users/btang/Documents/CS 499 (Independent Research)/essae_qualification/src/user-studies/qualification.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport ReactMarkdown from 'react-markdown'; // import { Redirect } from \"react-router-dom\";\n\nimport { Audio } from '../components';\nimport { AudioRadioButtonGroup } from '../components';\nimport { Shuffle } from '../components';\nimport { MultipleChoice } from '../components';\nimport { updateChoice } from '../components';\nimport '../css/user-studies.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst shuffledData = Shuffle([\"IOS\", \"ISO\", \"OIS\", \"OSI\", \"SIO\", \"SOI\"]);\n\nfunction clickHandler(index, setIndex, setChoice, UpdateAudio, setAudioEnded, isEarlyFinish) {\n  if (isEarlyFinish) {\n    setIndex('early_finish');\n  } else {\n    setIndex(index + 1);\n  }\n\n  if (setChoice !== undefined) {\n    updateChoice(-1);\n  }\n\n  if (UpdateAudio !== undefined) {\n    UpdateAudio();\n  }\n\n  if (setAudioEnded !== undefined) {\n    setAudioEnded(false);\n  }\n}\n\nfunction Consent_Page(index, setIndex) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section col-all\",\n      children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        source: `# **Welcome!**\\nPlease read the \n\t\t\t\t\tfollowing information carefully before you decide to take \n\t\t\t\t\tpart. This will tell you why the research is being done \n\t\t\t\t\tand what you will be asked to do if you take part.\n\t\t\t\t\t\n\t\t\t\t\t \\n\\nWe are conducting a research \n\t\t\t\t\tstudy to evaluate the quality of an audio processing algorithm.\n\t\t\t\t\tIf you agree to participate, you \n\t\t\t\t\twill be asked to fill out a brief questionnaire about your \n\t\t\t\t\tage, your hearing ability, and the listening setup \n\t\t\t\t\tyou intend to use for our study. You will then be asked to \n\t\t\t\t\tevaluate a series of audio samples.\n\n\t\t\t\t\t \\n\\nThe entire interaction is completely \n\t\t\t\t\tanonymous. We will NOT collect any personally identifiable \n\t\t\t\t\tidentifiers. Your participation in this study does not \n\t\t\t\t\tinvolve any risk to you beyond that of your everyday \n\t\t\t\t\tlife.\n\n\t\t\t\t\t\\n\\nBy pressing **I Agree**, you confirm you are \n\t\t\t\t\twilling to participate in this research. However, you are \n\t\t\t\t\tfree to withdraw your participation at anytime. If you \n\t\t\t\t\thave any questions or \n\t\t\t\t\tfeedback, please contact the principal investigator, Bryan \n\t\t\t\t\tPardo, at pardo@northwestern.edu.`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section col-2 align-right\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        className: \"button\",\n        onClick: () => clickHandler(index, setIndex),\n        children: \"I Agree\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n}\n\n_c = Consent_Page;\n\nfunction Age_Question(index, setIndex, choice, setChoice) {\n  let next_button = null;\n  let isEarlyFinish = false;\n\n  if (choice !== -1) {\n    if (choice === 1) {\n      isEarlyFinish = true;\n    }\n\n    next_button = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section col-2 align-right\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        className: \"button\",\n        onClick: () => clickHandler(index, setIndex, setChoice, undefined, undefined, isEarlyFinish),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section col-all\",\n      children: [/*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        source: `**Question ${index}.** Are you at least 18 years old?`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(MultipleChoice, {\n        index: index,\n        choice: choice,\n        setChoice: setChoice,\n        labels: [\"Yes\", \"No\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }, this), next_button]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 3\n  }, this);\n}\n\n_c2 = Age_Question;\n\nfunction Disorder_Question(index, setIndex, choice, setChoice) {\n  let next_button = null;\n  let isEarlyFinish = false;\n\n  if (choice !== -1) {\n    if (choice === 0) {\n      isEarlyFinish = true;\n    }\n\n    next_button = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section col-2 align-right\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        className: \"button\",\n        onClick: () => clickHandler(index, setIndex, setChoice, undefined, undefined, isEarlyFinish),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 4\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section col-all\",\n      children: [/*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        source: `**Question ${index}.** Have you ever been diagnosed \n\t\t\t\twith hearing loss or a hearing disorder?`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(MultipleChoice, {\n        index: index,\n        choice: choice,\n        setChoice: setChoice,\n        labels: [\"Yes\", \"No\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 4\n    }, this), next_button]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 3\n  }, this);\n}\n\n_c3 = Disorder_Question;\n\nfunction ListeningDevice_Question(index, setIndex, choice, setChoice) {\n  let next_button = null;\n  let isEarlyFinish = false;\n\n  if (choice !== -1) {\n    if (choice !== 0) {\n      isEarlyFinish = true;\n    }\n\n    next_button = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section col-2 align-right\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        className: \"button\",\n        onClick: () => clickHandler(index, setIndex, setChoice, undefined, undefined, isEarlyFinish),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 4\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section col-all\",\n      children: [/*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        source: `**Question ${index}.** Which listening device are you currently using?`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(MultipleChoice, {\n        index: index,\n        choice: choice,\n        setChoice: setChoice,\n        labels: [\"Headphones/Earbuds\", \"Stand-Alone Speakers\", \"Built-In-Device Speakers\", \"Other\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 4\n    }, this), next_button]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 3\n  }, this);\n}\n\n_c4 = ListeningDevice_Question;\n\nfunction Environment_Question(index, setIndex, choice, setChoice) {\n  let next_button = null;\n  let isEarlyFinish = false;\n\n  if (choice !== -1) {\n    if (choice === 1) {\n      isEarlyFinish = true;\n    }\n\n    next_button = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section col-2 align-right\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        className: \"button\",\n        onClick: () => clickHandler(index, setIndex, setChoice, undefined, undefined, isEarlyFinish),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 4\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section col-all\",\n      children: [/*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        source: `**Question ${index}.** Are you in a quiet environment?`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(MultipleChoice, {\n        index: index,\n        choice: choice,\n        setChoice: setChoice,\n        labels: [\"Yes\", \"No\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 4\n    }, this), next_button]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 3\n  }, this);\n}\n\n_c5 = Environment_Question;\n\nfunction Calibration_Page(index, setIndex, audioRef, UpdateAudio, audioEnded, setAudioEnded) {\n  let next_button = null;\n\n  if (audioEnded) {\n    next_button = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section col-2 align-right\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        className: \"button\",\n        onClick: () => clickHandler(index, setIndex, undefined, UpdateAudio, setAudioEnded),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 4\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container grid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section col-all\",\n      children: [/*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        source: `### **Calibration**\\n**Please wear your \n\t\t\t\t\theadphones now for calibration.**  \\nFirst, set your computer \n\t\t\t\t\tvolume to about 25% of maximum.  \\nPress the button, then turn \n\t\t\t\t\tup the volume on your computer until the calibration noise \n\t\t\t\t\tis at a loud but comfortable level.  \\nFeel free to play the \n\t\t\t\t\tcalibration sound as many times as you like.`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Audio, {\n        name: 'qualification',\n        file: 'noise_calib_stim.wav',\n        audioRef: audioRef,\n        setAudioEnded: setAudioEnded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        source: `Press **Next** when you are satisfied with the volume level.`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 5\n      }, this), next_button]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 3\n  }, this);\n}\n\n_c6 = Calibration_Page;\n\nfunction HeadphoneCheck_Page(index, setIndex, choice, setChoice, audioRef, UpdateAudio, audioEnded, setAudioEnded) {\n  let multiple_choice = null;\n\n  if (audioEnded) {\n    multiple_choice = /*#__PURE__*/_jsxDEV(MultipleChoice, {\n      index: index,\n      choice: choice,\n      setChoice: setChoice,\n      labels: [\"FIRST sound was QUIETEST\", \"SECOND sound was QUIETEST\", \"THIRD sound was QUIETEST\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 4\n    }, this);\n  }\n\n  let next_button = null;\n  let isEarlyFinish = false;\n\n  if (choice !== shuffledData[index].indexOf('S')) {\n    isEarlyFinish = true;\n  }\n\n  if (choice !== -1 && !isEarlyFinish && index === shuffledData.length - 1) {\n    next_button = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section col-2 align-right\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://btangsp.github.io/essae_training/\",\n        className: \"button\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 4\n    }, this);\n  } else if (choice !== -1) {\n    next_button = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section col-2 align-right\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        className: \"button\",\n        onClick: () => clickHandler(index, setIndex, setChoice, UpdateAudio, setAudioEnded, isEarlyFinish),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 4\n    }, this);\n  }\n\n  let file = \"antiphase_HC_\" + shuffledData[index] + \".wav\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container grid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section col-all\",\n      children: [/*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        source: `**Listening Test ${index + 1} of ${shuffledData.length}.** When you hit play, you will hear three sounds \n\t\t\t\t\tseparated by silences.  \\nSimply judge WHICH SOUND WAS QUIETEST \n\t\t\t\t\t \\u2014 1, 2, or 3?`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Audio, {\n        name: 'qualification',\n        file: file,\n        audioRef: audioRef,\n        setAudioEnded: setAudioEnded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 5\n      }, this), multiple_choice, next_button]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 3\n  }, this);\n}\n\n_c7 = HeadphoneCheck_Page;\n\nfunction HeadphoneCheck_Pages(index, setIndex, choice, setChoice, audioRef, UpdateAudio, audioEnded, setAudioEnded, index_h, setIndex_h) {\n  if (index_h === 'early_finish') {\n    setIndex('early_finish');\n    return;\n  }\n\n  if (index_h < shuffledData.length) {\n    return HeadphoneCheck_Page(index_h, setIndex_h, choice, setChoice, audioRef, UpdateAudio, audioEnded, setAudioEnded);\n  } else {\n    setIndex(index + 1);\n    return;\n  }\n}\n\n_c8 = HeadphoneCheck_Pages;\n\nfunction EarlyFinish_Page() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      source: `Thank you for your participation. Please enter \n\t\t\t\tthe following code into the HIT.`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"3F1N1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 3\n  }, this);\n}\n\n_c9 = EarlyFinish_Page;\n\nfunction Question_Pages(index, setIndex, audioRef, UpdateAudio) {\n  _s();\n\n  const [choice, setChoice] = useState(-1);\n  const [audioEnded, setAudioEnded] = useState(false);\n  const [index_h, setIndex_h] = useState(0);\n\n  switch (index) {\n    case 0:\n      return Consent_Page(index, setIndex);\n\n    case 1:\n      return Age_Question(index, setIndex, choice, setChoice);\n\n    case 2:\n      return Disorder_Question(index, setIndex, choice, setChoice);\n\n    case 3:\n      return ListeningDevice_Question(index, setIndex, choice, setChoice);\n\n    case 4:\n      return Environment_Question(index, setIndex, choice, setChoice);\n\n    case 5:\n      return Calibration_Page(index, setIndex, audioRef, UpdateAudio, audioEnded, setAudioEnded);\n\n    case 6:\n      return HeadphoneCheck_Pages(index, setIndex, choice, setChoice, audioRef, UpdateAudio, audioEnded, setAudioEnded, index_h, setIndex_h);\n\n    case 'early_finish':\n      return EarlyFinish_Page();\n\n    default:\n      return (\n        /*#__PURE__*/\n        // <Redirect to={'/essae_training/'} />\n        _jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            source: `Click next to start the training section.`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section col-2 align-right\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://btangsp.github.io/essae_training/\",\n              className: \"button\",\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 5\n        }, this)\n      );\n  }\n}\n\n_s(Question_Pages, \"H6+RnTw6SJJQ4ICndqxETPFSomw=\");\n\n_c10 = Question_Pages;\nexport default function Qualification() {\n  _s2();\n\n  const [index, setIndex] = useState(0);\n  const audioRef = useRef();\n\n  const UpdateAudio = source => {\n    if (audioRef.current) {\n      audioRef.current.pause();\n      audioRef.current.load();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Question_Pages(index, setIndex, audioRef, UpdateAudio)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 342,\n    columnNumber: 3\n  }, this);\n}\n\n_s2(Qualification, \"I/U1FPHNvPOcyG8m6VHc5vrAPQg=\");\n\n_c11 = Qualification;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"Consent_Page\");\n$RefreshReg$(_c2, \"Age_Question\");\n$RefreshReg$(_c3, \"Disorder_Question\");\n$RefreshReg$(_c4, \"ListeningDevice_Question\");\n$RefreshReg$(_c5, \"Environment_Question\");\n$RefreshReg$(_c6, \"Calibration_Page\");\n$RefreshReg$(_c7, \"HeadphoneCheck_Page\");\n$RefreshReg$(_c8, \"HeadphoneCheck_Pages\");\n$RefreshReg$(_c9, \"EarlyFinish_Page\");\n$RefreshReg$(_c10, \"Question_Pages\");\n$RefreshReg$(_c11, \"Qualification\");","map":{"version":3,"sources":["/Users/btang/Documents/CS 499 (Independent Research)/essae_qualification/src/user-studies/qualification.js"],"names":["React","useState","useRef","ReactMarkdown","Audio","AudioRadioButtonGroup","Shuffle","MultipleChoice","updateChoice","shuffledData","clickHandler","index","setIndex","setChoice","UpdateAudio","setAudioEnded","isEarlyFinish","undefined","Consent_Page","Age_Question","choice","next_button","Disorder_Question","ListeningDevice_Question","Environment_Question","Calibration_Page","audioRef","audioEnded","HeadphoneCheck_Page","multiple_choice","indexOf","length","file","HeadphoneCheck_Pages","index_h","setIndex_h","EarlyFinish_Page","Question_Pages","Qualification","source","current","pause","load"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react'\nimport ReactMarkdown from 'react-markdown'\n// import { Redirect } from \"react-router-dom\";\n\n\nimport { Audio } from '../components'\nimport { AudioRadioButtonGroup } from '../components'\nimport { Shuffle } from '../components'\nimport { MultipleChoice } from '../components'\nimport { updateChoice } from '../components'\n\nimport '../css/user-studies.css'\n\nconst shuffledData = Shuffle([\"IOS\", \"ISO\", \"OIS\", \"OSI\", \"SIO\", \"SOI\"]);\n\nfunction clickHandler(index, setIndex, setChoice, UpdateAudio, setAudioEnded, isEarlyFinish) {\n\tif (isEarlyFinish) {\n\t\tsetIndex('early_finish');\n\t}\n\telse {\n\t\tsetIndex(index + 1);\t\n\t}\n\tif (setChoice !== undefined) {\n\t\tupdateChoice(-1);\n\t}\n\tif (UpdateAudio !== undefined) {\n\t\tUpdateAudio();\n\t}\n\tif (setAudioEnded !== undefined) {\n\t\tsetAudioEnded(false);\n\t}\n}\n\nfunction Consent_Page(index, setIndex) {\n\treturn (\n\t\t<div className=\"container grid\">\n\t\t\t<div className=\"section col-all\">\n\t\t\t\t<ReactMarkdown source={`# **Welcome!**\\nPlease read the \n\t\t\t\t\tfollowing information carefully before you decide to take \n\t\t\t\t\tpart. This will tell you why the research is being done \n\t\t\t\t\tand what you will be asked to do if you take part.\n\t\t\t\t\t\n\t\t\t\t\t \\n\\nWe are conducting a research \n\t\t\t\t\tstudy to evaluate the quality of an audio processing algorithm.\n\t\t\t\t\tIf you agree to participate, you \n\t\t\t\t\twill be asked to fill out a brief questionnaire about your \n\t\t\t\t\tage, your hearing ability, and the listening setup \n\t\t\t\t\tyou intend to use for our study. You will then be asked to \n\t\t\t\t\tevaluate a series of audio samples.\n\n\t\t\t\t\t \\n\\nThe entire interaction is completely \n\t\t\t\t\tanonymous. We will NOT collect any personally identifiable \n\t\t\t\t\tidentifiers. Your participation in this study does not \n\t\t\t\t\tinvolve any risk to you beyond that of your everyday \n\t\t\t\t\tlife.\n\n\t\t\t\t\t\\n\\nBy pressing **I Agree**, you confirm you are \n\t\t\t\t\twilling to participate in this research. However, you are \n\t\t\t\t\tfree to withdraw your participation at anytime. If you \n\t\t\t\t\thave any questions or \n\t\t\t\t\tfeedback, please contact the principal investigator, Bryan \n\t\t\t\t\tPardo, at pardo@northwestern.edu.`}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"section col-2 align-right\">\n\t\t\t\t<a href=\"#\" className=\"button\" onClick={() => clickHandler(index, setIndex)}>I Agree</a>\n\t\t\t</div>\n\t\t</div>\n\t);\n\t\n}\n\nfunction Age_Question(index, setIndex, choice, setChoice) {\n\tlet next_button = null;\n\tlet isEarlyFinish = false;\n\tif (choice !== -1) {\n\t\tif (choice === 1) {\n\t\t\tisEarlyFinish = true;\n\t\t}\n\t\tnext_button = (\n\t\t\t<div className=\"section col-2 align-right\">\n\t\t\t\t<a href=\"#\" className=\"button\" onClick={() => clickHandler(index, setIndex, setChoice, undefined, undefined, isEarlyFinish)}>Next</a>\n\t\t\t</div>\n\t\t);\n\t}\n\treturn (\n\t\t<div className=\"container grid\">\n\t\t\t<div className=\"section col-all\">\n\t\t\t\t<ReactMarkdown source={`**Question ${index}.** Are you at least 18 years old?`}/>\n\t\t\t\t<MultipleChoice \n\t\t\t\t\tindex={index} \n\t\t\t\t\tchoice={choice} \n\t\t\t\t\tsetChoice={setChoice}\n\t\t\t\t\tlabels={[\"Yes\", \"No\"]}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t{next_button}\n\t\t</div>\n\t);\n}\n\nfunction Disorder_Question(index, setIndex, choice, setChoice) {\n\tlet next_button = null;\n\tlet isEarlyFinish = false;\n\tif (choice !== -1) {\n\t\tif (choice === 0) {\n\t\t\tisEarlyFinish = true;\n\t\t}\n\t\tnext_button = (\n\t\t\t<div className=\"section col-2 align-right\">\n\t\t\t\t<a href=\"#\" className=\"button\" onClick={() => clickHandler(index, setIndex, setChoice, undefined, undefined, isEarlyFinish)}>Next</a>\n\t\t\t</div>\n\t\t);\n\t}\n\treturn (\n\t\t<div className=\"container grid\">\n\t\t\t<div className=\"section col-all\">\n\t\t\t\t<ReactMarkdown source={`**Question ${index}.** Have you ever been diagnosed \n\t\t\t\twith hearing loss or a hearing disorder?`}/>\n\t\t\t\t<MultipleChoice \n\t\t\t\t\tindex={index}\n\t\t\t\t\tchoice={choice}\n\t\t\t\t\tsetChoice={setChoice}\n\t\t\t\t\tlabels={[\"Yes\", \"No\"]}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t{next_button}\n\t\t</div>\n\t);\n}\n\nfunction ListeningDevice_Question(index, setIndex, choice, setChoice) {\n\tlet next_button = null;\n\tlet isEarlyFinish = false;\n\tif (choice !== -1) {\n\t\tif (choice !== 0) {\n\t\t\tisEarlyFinish = true;\n\t\t}\n\t\tnext_button = (\n\t\t\t<div className=\"section col-2 align-right\">\n\t\t\t\t<a href=\"#\" className=\"button\" onClick={() => clickHandler(index, setIndex, setChoice, undefined, undefined, isEarlyFinish)}>Next</a>\n\t\t\t</div>\n\t\t);\n\t}\n\treturn (\n\t\t<div className=\"container grid\">\n\t\t\t<div className=\"section col-all\">\n\t\t\t\t<ReactMarkdown source={`**Question ${index}.** Which listening device are you currently using?`}/>\n\t\t\t\t<MultipleChoice \n\t\t\t\t\tindex={index}\n\t\t\t\t\tchoice={choice}\n\t\t\t\t\tsetChoice={setChoice}\n\t\t\t\t\tlabels={[\"Headphones/Earbuds\", \"Stand-Alone Speakers\", \"Built-In-Device Speakers\", \"Other\"]}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t{next_button}\n\t\t</div>\n\t);\n}\n\nfunction Environment_Question(index, setIndex, choice, setChoice) {\n\tlet next_button = null;\n\tlet isEarlyFinish = false;\n\tif (choice !== -1) {\n\t\tif (choice === 1) {\n\t\t\tisEarlyFinish = true;\n\t\t}\n\t\tnext_button = (\n\t\t\t<div className=\"section col-2 align-right\">\n\t\t\t\t<a href=\"#\" className=\"button\" onClick={() => clickHandler(index, setIndex, setChoice, undefined, undefined, isEarlyFinish)}>Next</a>\n\t\t\t</div>\n\t\t);\n\t}\n\treturn (\n\t\t<div className=\"container grid\">\n\t\t\t<div className=\"section col-all\">\n\t\t\t\t<ReactMarkdown source={`**Question ${index}.** Are you in a quiet environment?`}/>\n\t\t\t\t<MultipleChoice \n\t\t\t\t\tindex={index}\n\t\t\t\t\tchoice={choice}\n\t\t\t\t\tsetChoice={setChoice}\n\t\t\t\t\tlabels={[\"Yes\", \"No\"]}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t{next_button}\n\t\t</div>\n\t);\n}\n\nfunction Calibration_Page(index, setIndex, audioRef, UpdateAudio, audioEnded, setAudioEnded) {\n\tlet next_button = null;\n\tif (audioEnded) {\n\t\tnext_button = (\n\t\t\t<div className=\"section col-2 align-right\">\n\t\t\t\t<a href=\"#\" className=\"button\" onClick={() => clickHandler(index, setIndex, undefined, UpdateAudio, setAudioEnded)}>Next</a>\n\t\t\t</div>\n\t\t);\n\t}\n\treturn (\n\t\t<div className=\"container grid\">\n\t\t\t<div className=\"section col-all\">\n\t\t\t\t<ReactMarkdown source={`### **Calibration**\\n**Please wear your \n\t\t\t\t\theadphones now for calibration.**  \\nFirst, set your computer \n\t\t\t\t\tvolume to about 25% of maximum.  \\nPress the button, then turn \n\t\t\t\t\tup the volume on your computer until the calibration noise \n\t\t\t\t\tis at a loud but comfortable level.  \\nFeel free to play the \n\t\t\t\t\tcalibration sound as many times as you like.`}/>\n\t\t\t\t<Audio \n\t\t\t\t\tname={'qualification'} \n\t\t\t\t\tfile={'noise_calib_stim.wav'} \n\t\t\t\t\taudioRef={audioRef} \n\t\t\t\t\tsetAudioEnded={setAudioEnded}/>\n\t\t\t\t<ReactMarkdown source={`Press **Next** when you are satisfied with the volume level.`}/>\n\t\t\t\t{next_button}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nfunction HeadphoneCheck_Page(index, setIndex, choice, setChoice, audioRef, UpdateAudio, audioEnded, setAudioEnded) {\n\tlet multiple_choice = null;\n\tif (audioEnded) {\n\t\tmultiple_choice = (\n\t\t\t<MultipleChoice\n\t\t\t\tindex={index}\n\t\t\t\tchoice={choice}\n\t\t\t\tsetChoice={setChoice}\n\t\t\t\tlabels={[\"FIRST sound was QUIETEST\", \"SECOND sound was QUIETEST\", \"THIRD sound was QUIETEST\"]}/>\n\t\t);\n\t}\n\tlet next_button = null;\n\tlet isEarlyFinish = false;\n\tif (choice !== shuffledData[index].indexOf('S')) {\n\t\tisEarlyFinish = true;\n\t}\n\tif (choice !== -1 && !isEarlyFinish && index === shuffledData.length - 1) {\n\t\tnext_button = (\n\t\t\t<div className=\"section col-2 align-right\">\n\t\t\t\t<a href=\"https://btangsp.github.io/essae_training/\" className=\"button\">Next</a>\t\n\t\t\t</div>\n\t\t);\n\t}\n\telse if (choice !== -1) {\n\t\tnext_button = (\n\t\t\t<div className=\"section col-2 align-right\">\n\t\t\t\t<a href=\"#\" className=\"button\" onClick={() => clickHandler(index, setIndex, setChoice, UpdateAudio, setAudioEnded, isEarlyFinish)}>Next</a>\n\t\t\t</div>\n\t\t);\n\t}\n\tlet file = \"antiphase_HC_\" + shuffledData[index] + \".wav\";\n\treturn (\n\t\t<div className=\"container grid\">\n\t\t\t<div className=\"section col-all\">\n\t\t\t\t<ReactMarkdown source={`**Listening Test ${index + 1} of ${shuffledData.length}.** When you hit play, you will hear three sounds \n\t\t\t\t\tseparated by silences.  \\nSimply judge WHICH SOUND WAS QUIETEST \n\t\t\t\t\t \\u2014 1, 2, or 3?`}/>\n\t\t\t\t<Audio\n\t\t\t\t\tname={'qualification'}\n\t\t\t\t\tfile={file}\n\t\t\t\t\taudioRef={audioRef}\n\t\t\t\t\tsetAudioEnded={setAudioEnded}/>\n\t\t\t\t{multiple_choice}\n\t\t\t\t{next_button}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nfunction HeadphoneCheck_Pages(index, setIndex, choice, setChoice, audioRef, UpdateAudio, audioEnded, setAudioEnded, index_h, setIndex_h) {\n\tif (index_h === 'early_finish') {\n\t\tsetIndex('early_finish');\n\t\treturn;\n\t}\n\tif (index_h < shuffledData.length) {\n\t\treturn HeadphoneCheck_Page(index_h, setIndex_h, choice, setChoice, audioRef, UpdateAudio, audioEnded, setAudioEnded);\n\t}\n\telse {\n\t\tsetIndex(index + 1);\n\t\treturn;\n\t}\n}\n\nfunction EarlyFinish_Page() {\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<ReactMarkdown source={`Thank you for your participation. Please enter \n\t\t\t\tthe following code into the HIT.`}/>\n\t\t\t<h1>3F1N1</h1>\n\t\t</div>\n\t);\n}\n\nfunction Question_Pages(index, setIndex, audioRef, UpdateAudio) {\n\tconst [choice, setChoice] = useState(-1);\n\tconst [audioEnded, setAudioEnded] = useState(false);\n\tconst [index_h, setIndex_h] = useState(0);\n\n\tswitch (index) {\n\t\tcase 0:\n\t\t\treturn Consent_Page(index, setIndex);\n\t\tcase 1:\n\t\t\treturn Age_Question(index, setIndex, choice, setChoice);\n\t\tcase 2:\n\t\t\treturn Disorder_Question(index, setIndex, choice, setChoice);\n\t\tcase 3:\n\t\t\treturn ListeningDevice_Question(index, setIndex, choice, setChoice);\n\t\tcase 4:\n\t\t\treturn Environment_Question(index, setIndex, choice, setChoice);\n\t\tcase 5:\n\t\t\treturn Calibration_Page(index, setIndex, audioRef, UpdateAudio, audioEnded, setAudioEnded);\n\t\tcase 6:\n\t\t\treturn HeadphoneCheck_Pages(index, setIndex, choice, setChoice, audioRef, UpdateAudio, audioEnded, setAudioEnded, index_h, setIndex_h);\n\t\tcase 'early_finish':\n\t\t\treturn EarlyFinish_Page();\n\t\tdefault:\n\t\t\treturn (\n\t\t\t\t// <Redirect to={'/essae_training/'} />\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<ReactMarkdown source={`Click next to start the training section.`}/>\n\t\t\t\t\t<div className=\"section col-2 align-right\">\n\t\t\t\t\t\t<a href=\"https://btangsp.github.io/essae_training/\" className=\"button\">Next</a>\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t}\n}\n\nexport default function Qualification() {\n\n\tconst [index, setIndex] = useState(0);\n\n\tconst audioRef = useRef();\n\n\tconst UpdateAudio = (source) => {\n\t\tif (audioRef.current) {\n\t\t\taudioRef.current.pause();\n\t\t\taudioRef.current.load();\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{Question_Pages(index, setIndex, audioRef, UpdateAudio)}\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}